# -*- coding: utf-8 -*-
"""IoT Face Recognition Attendance System.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vLbWoE3UjwisWPBv8JyrPcZTjlUrpX6R

# Making the necessary installations
"""

!pip install dlib
!pip install face_recognition
!pip install --upgrade pip
!pip install opencv-python

"""# Importing Libraries"""

import numpy as np
import os
import face_recognition
from PIL import Image, ImageDraw, ImageFont

"""# Comparing of images and returning the percentage accuracy of matching"""

image_of_bill = face_recognition.load_image_file('/Bill_Gates.jpg')
bill_encoding = face_recognition.face_encodings(image_of_bill)[0]

image_of_messi = face_recognition.load_image_file('/Lionel_Messi.jpg')
messi_encoding = face_recognition.face_encodings(image_of_messi)[0]

image_input = face_recognition.load_image_file('/oshmita_pic.jpg')
input_encoding = face_recognition.face_encodings(image_input)[0]

known_face_encodings = [bill_encoding, messi_encoding, input_encoding]

known_face_names = ["Bill Gates", "Lionel Messi", "Oshmita Sarkar"]

test_image = face_recognition.load_image_file('/oshmita_pic2.jpg')

# Finding all the faces in test image
face_locations = face_recognition.face_locations(test_image)
face_encodings = face_recognition.face_encodings(test_image, face_locations)

# Converting to pillow format
pil_image = Image.fromarray(test_image)
draw = ImageDraw.Draw(pil_image)

# Looping through the face sin test image
for (top, right, bottom, left), face_encoding in zip(face_locations, face_encodings):
  matches = face_recognition.compare_faces(known_face_encodings, face_encoding)
  
  results3 = face_recognition.face_distance(known_face_encodings, face_encoding)
  name = "Unknown Person"

  print(matches)
  res=0

  for id,m in enumerate(matches):
    if m:
      res = id
      break

  if True in matches:
    first_match_index = matches.index(True)
    name = known_face_names[first_match_index]
    
    # Draw a rectangle around the face
    draw.rectangle(((left, top), (right, bottom)), outline=(0,0,0))

    # Draw label 
    text_width, text_height = draw.textsize(name)
    draw.rectangle(((left, bottom-text_height-10), (right, bottom)), outline=(0,0,0), fill=(0,0,0))
    draw.text((left+6, bottom-text_height-5), name + ": " + str(round(((1-results3[res])*100),2)), fill=(255,255,255,255), align="center")

del draw

# Display the image
pil_image.show()

# Saving the image
pil_image.save("Identify.jpg")

